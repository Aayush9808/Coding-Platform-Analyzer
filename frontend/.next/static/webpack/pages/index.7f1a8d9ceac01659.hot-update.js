"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/utils/exportUtils.ts":
/*!**********************************!*\
  !*** ./src/utils/exportUtils.ts ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   exportShareLink: function() { return /* binding */ exportShareLink; },\n/* harmony export */   exportToExcel: function() { return /* binding */ exportToExcel; },\n/* harmony export */   exportToPDF: function() { return /* binding */ exportToPDF; }\n/* harmony export */ });\n/* harmony import */ var jspdf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jspdf */ \"./node_modules/jspdf/dist/jspdf.es.min.js\");\n\nconst showToast = function(msg) {\n    let type = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"success\";\n    const colors = {\n        success: \"#10b981\",\n        error: \"#ef4444\",\n        loading: \"#3b82f6\"\n    };\n    const div = document.createElement(\"div\");\n    div.textContent = msg;\n    div.style.cssText = \"position:fixed;top:20px;right:20px;background:\".concat(colors[type], \";color:white;padding:16px 24px;border-radius:8px;z-index:9999;box-shadow:0 4px 6px rgba(0,0,0,0.1);font-family:system-ui;font-size:14px;font-weight:500;\");\n    div.id = \"export-toast\";\n    const old = document.getElementById(\"export-toast\");\n    if (old) old.remove();\n    document.body.appendChild(div);\n    if (type !== \"loading\") setTimeout(()=>div.remove(), 3000);\n    return div;\n};\nconst exportToPDF = async (data)=>{\n    const t = toast(\"\\uD83D\\uDCC4 Generating PDF...\", \"loading\");\n    try {\n        var _data_overall, _data_overall1, _data_aiInsights;\n        const doc = new jspdf__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n        const w = doc.internal.pageSize.getWidth();\n        let y = 20;\n        doc.setFontSize(24);\n        doc.setTextColor(59, 130, 246);\n        doc.text(\"Platform Analyser Report\", w / 2, y, {\n            align: \"center\"\n        });\n        y += 10;\n        doc.setFontSize(11);\n        doc.setTextColor(100);\n        doc.text(new Date().toLocaleString(), w / 2, y, {\n            align: \"center\"\n        });\n        y += 15;\n        const stats = ((_data_overall = data.overall) === null || _data_overall === void 0 ? void 0 : _data_overall.stats) || {};\n        doc.setFontSize(16);\n        doc.setTextColor(0);\n        doc.text(\"Overall Statistics\", 14, y);\n        y += 8;\n        doc.autoTable({\n            startY: y,\n            head: [\n                [\n                    \"Metric\",\n                    \"Value\"\n                ]\n            ],\n            body: [\n                [\n                    \"Total Problems\",\n                    stats.total || 0\n                ],\n                [\n                    \"Unique Problems\",\n                    stats.unique || 0\n                ],\n                [\n                    \"Platforms\",\n                    ((_data_overall1 = data.overall) === null || _data_overall1 === void 0 ? void 0 : _data_overall1.platformsAnalyzed) || 0\n                ],\n                [\n                    \"Easy\",\n                    stats.easy || 0\n                ],\n                [\n                    \"Medium\",\n                    stats.medium || 0\n                ],\n                [\n                    \"Hard\",\n                    stats.hard || 0\n                ]\n            ],\n            theme: \"grid\",\n            headStyles: {\n                fillColor: [\n                    59,\n                    130,\n                    246\n                ]\n            }\n        });\n        y = doc.lastAutoTable.finalY + 12;\n        if (y > 220) {\n            doc.addPage();\n            y = 20;\n        }\n        doc.setFontSize(16);\n        doc.text(\"Platform Details\", 14, y);\n        y += 10;\n        if (data.platforms) {\n            Object.entries(data.platforms).forEach((param)=>{\n                let [key, pData] = param;\n                if ((pData === null || pData === void 0 ? void 0 : pData.success) && (pData === null || pData === void 0 ? void 0 : pData.stats)) {\n                    const platform = key.split(\"_\")[0].toUpperCase();\n                    doc.setFontSize(14);\n                    doc.setTextColor(59, 130, 246);\n                    doc.text(\"\".concat(platform, \" - \").concat(pData.username), 14, y);\n                    y += 6;\n                    doc.autoTable({\n                        startY: y,\n                        body: [\n                            [\n                                \"Username\",\n                                pData.username || \"N/A\"\n                            ],\n                            [\n                                \"Total\",\n                                pData.stats.total || 0\n                            ],\n                            [\n                                \"Easy\",\n                                pData.stats.easy || 0\n                            ],\n                            [\n                                \"Medium\",\n                                pData.stats.medium || 0\n                            ],\n                            [\n                                \"Hard\",\n                                pData.stats.hard || 0\n                            ]\n                        ],\n                        theme: \"plain\",\n                        margin: {\n                            left: 20\n                        }\n                    });\n                    y = doc.lastAutoTable.finalY + 10;\n                    doc.setTextColor(0);\n                    if (y > 250) {\n                        doc.addPage();\n                        y = 20;\n                    }\n                }\n            });\n        }\n        if ((_data_aiInsights = data.aiInsights) === null || _data_aiInsights === void 0 ? void 0 : _data_aiInsights.summary) {\n            if (y > 200) {\n                doc.addPage();\n                y = 20;\n            }\n            doc.setFontSize(16);\n            doc.setTextColor(139, 92, 246);\n            doc.text(\"AI Insights\", 14, y);\n            y += 8;\n            doc.setFontSize(12);\n            doc.setTextColor(0);\n            doc.text(\"Skill Level: \".concat(data.aiInsights.summary.level), 14, y);\n        }\n        const pages = doc.internal.getNumberOfPages();\n        for(let i = 1; i <= pages; i++){\n            doc.setPage(i);\n            doc.setFontSize(9);\n            doc.setTextColor(150);\n            doc.text(\"Page \".concat(i, \"/\").concat(pages), w / 2, doc.internal.pageSize.getHeight() - 10, {\n                align: \"center\"\n            });\n        }\n        doc.save(\"platform-analytics-\".concat(Date.now(), \".pdf\"));\n        t.remove();\n        toast(\"✅ PDF Downloaded!\", \"success\");\n    } catch (error) {\n        t.remove();\n        toast(\"❌ PDF Failed\", \"error\");\n        console.error(error);\n    }\n};\nconst exportToExcel = async (data)=>{\n    const t = toast(\"\\uD83D\\uDCCA Generating Excel...\", \"loading\");\n    try {\n        var _data_overall, _data_overall1;\n        const XLSX = await __webpack_require__.e(/*! import() */ \"node_modules_xlsx_xlsx_mjs\").then(__webpack_require__.bind(__webpack_require__, /*! xlsx */ \"./node_modules/xlsx/xlsx.mjs\"));\n        const wb = XLSX.utils.book_new();\n        const stats = ((_data_overall = data.overall) === null || _data_overall === void 0 ? void 0 : _data_overall.stats) || {};\n        const overview = [\n            [\n                \"Platform Analyser Report\"\n            ],\n            [\n                \"Generated: \".concat(new Date().toLocaleString())\n            ],\n            [],\n            [\n                \"OVERALL STATISTICS\"\n            ],\n            [\n                \"Metric\",\n                \"Value\"\n            ],\n            [\n                \"Total Problems\",\n                stats.total || 0\n            ],\n            [\n                \"Unique Problems\",\n                stats.unique || 0\n            ],\n            [\n                \"Platforms\",\n                ((_data_overall1 = data.overall) === null || _data_overall1 === void 0 ? void 0 : _data_overall1.platformsAnalyzed) || 0\n            ],\n            [\n                \"Easy\",\n                stats.easy || 0\n            ],\n            [\n                \"Medium\",\n                stats.medium || 0\n            ],\n            [\n                \"Hard\",\n                stats.hard || 0\n            ]\n        ];\n        const ws1 = XLSX.utils.aoa_to_sheet(overview);\n        ws1[\"!cols\"] = [\n            {\n                wch: 25\n            },\n            {\n                wch: 15\n            }\n        ];\n        XLSX.utils.book_append_sheet(wb, ws1, \"Overview\");\n        const platforms = [\n            [\n                \"Platform\",\n                \"Username\",\n                \"Total\",\n                \"Easy\",\n                \"Medium\",\n                \"Hard\"\n            ]\n        ];\n        if (data.platforms) {\n            Object.entries(data.platforms).forEach((param)=>{\n                let [key, pData] = param;\n                if ((pData === null || pData === void 0 ? void 0 : pData.success) && (pData === null || pData === void 0 ? void 0 : pData.stats)) {\n                    platforms.push([\n                        key.split(\"_\")[0].toUpperCase(),\n                        pData.username || \"N/A\",\n                        pData.stats.total || 0,\n                        pData.stats.easy || 0,\n                        pData.stats.medium || 0,\n                        pData.stats.hard || 0\n                    ]);\n                }\n            });\n        }\n        const ws2 = XLSX.utils.aoa_to_sheet(platforms);\n        XLSX.utils.book_append_sheet(wb, ws2, \"Platforms\");\n        if (data.aiInsights) {\n            const insights = [\n                [\n                    \"AI INSIGHTS\"\n                ],\n                []\n            ];\n            if (data.aiInsights.summary) {\n                insights.push([\n                    \"Skill Level\",\n                    data.aiInsights.summary.level\n                ]);\n            }\n            if (data.aiInsights.performanceScore) {\n                insights.push([\n                    \"Score\",\n                    data.aiInsights.performanceScore.score\n                ]);\n                insights.push([\n                    \"Grade\",\n                    data.aiInsights.performanceScore.grade\n                ]);\n            }\n            const ws3 = XLSX.utils.aoa_to_sheet(insights);\n            XLSX.utils.book_append_sheet(wb, ws3, \"AI Insights\");\n        }\n        XLSX.writeFile(wb, \"platform-analytics-\".concat(Date.now(), \".xlsx\"));\n        t.remove();\n        toast(\"✅ Excel Downloaded!\", \"success\");\n    } catch (error) {\n        t.remove();\n        toast(\"❌ Excel Failed\", \"error\");\n        console.error(error);\n    }\n};\nconst exportShareLink = (data)=>{\n    const t = toast(\"\\uD83D\\uDD17 Creating link...\", \"loading\");\n    try {\n        const params = new URLSearchParams();\n        if (data.platforms) {\n            Object.entries(data.platforms).forEach((param)=>{\n                let [key, pData] = param;\n                if (pData === null || pData === void 0 ? void 0 : pData.success) {\n                    const platform = key.split(\"_\")[0];\n                    const existing = params.get(platform);\n                    if (existing) {\n                        params.set(platform, \"\".concat(existing, \",\").concat(pData.username));\n                    } else {\n                        params.set(platform, pData.username);\n                    }\n                }\n            });\n        }\n        const url = \"\".concat(window.location.origin, \"?\").concat(params.toString());\n        navigator.clipboard.writeText(url);\n        t.remove();\n        toast(\"✅ Link copied to clipboard!\", \"success\");\n        return url;\n    } catch (error) {\n        t.remove();\n        toast(\"❌ Failed to create link\", \"error\");\n        console.error(error);\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/utils/exportUtils.ts\n"));

/***/ })

});